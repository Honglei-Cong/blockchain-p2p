// Code generated by protoc-gen-go.
// source: event/event.proto
// DO NOT EDIT!

/*
Package event is a generated protocol buffer package.

It is generated from these files:
	event/event.proto

It has these top-level messages:
	EventDataNewBlock
	EventDataBlockHeader
	EventDataTx
	EventDataRoundState
	EventDataVote
	EventDataProposalHeartbeat
	EventDataString
*/
package event

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/9thchain/blockchain-p2p/protos/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventDataNewBlock struct {
	Block *common.Block `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
}

func (m *EventDataNewBlock) Reset()                    { *m = EventDataNewBlock{} }
func (m *EventDataNewBlock) String() string            { return proto.CompactTextString(m) }
func (*EventDataNewBlock) ProtoMessage()               {}
func (*EventDataNewBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EventDataNewBlock) GetBlock() *common.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type EventDataBlockHeader struct {
	Header *common.Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *EventDataBlockHeader) Reset()                    { *m = EventDataBlockHeader{} }
func (m *EventDataBlockHeader) String() string            { return proto.CompactTextString(m) }
func (*EventDataBlockHeader) ProtoMessage()               {}
func (*EventDataBlockHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EventDataBlockHeader) GetHeader() *common.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type EventDataTx struct {
}

func (m *EventDataTx) Reset()                    { *m = EventDataTx{} }
func (m *EventDataTx) String() string            { return proto.CompactTextString(m) }
func (*EventDataTx) ProtoMessage()               {}
func (*EventDataTx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type EventDataRoundState struct {
}

func (m *EventDataRoundState) Reset()                    { *m = EventDataRoundState{} }
func (m *EventDataRoundState) String() string            { return proto.CompactTextString(m) }
func (*EventDataRoundState) ProtoMessage()               {}
func (*EventDataRoundState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type EventDataVote struct {
	Vote *common.Vote `protobuf:"bytes,1,opt,name=vote" json:"vote,omitempty"`
}

func (m *EventDataVote) Reset()                    { *m = EventDataVote{} }
func (m *EventDataVote) String() string            { return proto.CompactTextString(m) }
func (*EventDataVote) ProtoMessage()               {}
func (*EventDataVote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EventDataVote) GetVote() *common.Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type EventDataProposalHeartbeat struct {
	Heartbeat *common.Heartbeat `protobuf:"bytes,1,opt,name=heartbeat" json:"heartbeat,omitempty"`
}

func (m *EventDataProposalHeartbeat) Reset()                    { *m = EventDataProposalHeartbeat{} }
func (m *EventDataProposalHeartbeat) String() string            { return proto.CompactTextString(m) }
func (*EventDataProposalHeartbeat) ProtoMessage()               {}
func (*EventDataProposalHeartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *EventDataProposalHeartbeat) GetHeartbeat() *common.Heartbeat {
	if m != nil {
		return m.Heartbeat
	}
	return nil
}

type EventDataString struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *EventDataString) Reset()                    { *m = EventDataString{} }
func (m *EventDataString) String() string            { return proto.CompactTextString(m) }
func (*EventDataString) ProtoMessage()               {}
func (*EventDataString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*EventDataNewBlock)(nil), "event.EventDataNewBlock")
	proto.RegisterType((*EventDataBlockHeader)(nil), "event.EventDataBlockHeader")
	proto.RegisterType((*EventDataTx)(nil), "event.EventDataTx")
	proto.RegisterType((*EventDataRoundState)(nil), "event.EventDataRoundState")
	proto.RegisterType((*EventDataVote)(nil), "event.EventDataVote")
	proto.RegisterType((*EventDataProposalHeartbeat)(nil), "event.EventDataProposalHeartbeat")
	proto.RegisterType((*EventDataString)(nil), "event.EventDataString")
}

func init() { proto.RegisterFile("event/event.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x91, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0x29, 0xb4, 0x85, 0x4e, 0xbf, 0x7e, 0xd2, 0xad, 0x82, 0xf4, 0x54, 0x56, 0x94, 0x5e,
	0xcc, 0x62, 0xbd, 0xe8, 0xc5, 0x43, 0x51, 0xe8, 0x45, 0x91, 0xad, 0x78, 0xd0, 0xd3, 0x26, 0x59,
	0x92, 0x60, 0x9b, 0x09, 0xdb, 0x69, 0xf5, 0xe7, 0x4b, 0x66, 0x93, 0x55, 0x2f, 0xc9, 0xbc, 0x79,
	0xf2, 0xbc, 0x09, 0x3b, 0x30, 0xb6, 0x07, 0x5b, 0x92, 0xe2, 0x6b, 0x54, 0x39, 0x24, 0x14, 0x3d,
	0x0e, 0xd3, 0x49, 0x82, 0xdb, 0x2d, 0x96, 0xca, 0xdf, 0x3c, 0x93, 0x37, 0x30, 0x7e, 0xa8, 0xe9,
	0xbd, 0x21, 0xf3, 0x64, 0x3f, 0x97, 0x1b, 0x4c, 0x3e, 0xc4, 0x19, 0xf4, 0xe2, 0x7a, 0x38, 0xed,
	0xcc, 0x3a, 0xf3, 0xe1, 0x62, 0x14, 0x35, 0x0a, 0x53, 0xed, 0x99, 0xbc, 0x83, 0xe3, 0x60, 0x32,
	0x58, 0x59, 0x93, 0x5a, 0x27, 0x2e, 0xa0, 0x9f, 0xf3, 0xd4, 0xd8, 0xff, 0x5b, 0xdb, 0x73, 0xdd,
	0x50, 0x39, 0x82, 0x61, 0xf0, 0x5f, 0xbe, 0xe4, 0x09, 0x4c, 0x42, 0xd4, 0xb8, 0x2f, 0xd3, 0x35,
	0x19, 0xb2, 0xf2, 0x0a, 0x46, 0xe1, 0xf1, 0x2b, 0x92, 0x15, 0x33, 0xe8, 0x1e, 0x90, 0x6c, 0x53,
	0xfe, 0xaf, 0x2d, 0xaf, 0x99, 0x66, 0x22, 0x1f, 0x61, 0x1a, 0x94, 0x67, 0x87, 0x15, 0xee, 0xcc,
	0x66, 0x65, 0x8d, 0xa3, 0xd8, 0x1a, 0x12, 0x0a, 0x06, 0x79, 0x1b, 0x9a, 0x92, 0xf1, 0xaf, 0x3f,
	0xf4, 0x40, 0xff, 0xbc, 0x23, 0xcf, 0xe1, 0x28, 0xd4, 0xad, 0xc9, 0x15, 0x65, 0x26, 0x04, 0x74,
	0x53, 0x43, 0x86, 0xf5, 0x81, 0xe6, 0x79, 0xf9, 0x0e, 0x73, 0x74, 0x59, 0x74, 0x4b, 0x79, 0x92,
	0x9b, 0xa2, 0x8c, 0xf8, 0x90, 0x78, 0xbc, 0xac, 0x16, 0x95, 0x3f, 0xed, 0x5d, 0xc4, 0x9b, 0x78,
	0x53, 0x59, 0x41, 0xf9, 0x3e, 0xae, 0x3f, 0xab, 0x5a, 0x41, 0xfd, 0x15, 0x94, 0x17, 0xfc, 0x1e,
	0xe3, 0x3e, 0xa7, 0xeb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x95, 0x42, 0xe0, 0x43, 0xdd, 0x01,
	0x00, 0x00,
}
