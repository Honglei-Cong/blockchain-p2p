// Code generated by protoc-gen-go.
// source: wal/wal.proto
// DO NOT EDIT!

/*
Package wal is a generated protocol buffer package.

It is generated from these files:
	wal/wal.proto

It has these top-level messages:
	EventDataRoundState
	MsgInfo
	TimeoutInfo
	EndHeightMessage
*/
package wal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import consensus "github.com/9thchain/blockchain-p2p/protos/consensus"
import p2p "github.com/9thchain/blockchain-p2p/protos/p2p"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventDataRoundState struct {
	Height     uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Round      uint32 `protobuf:"varint,2,opt,name=round" json:"round,omitempty"`
	Step       string `protobuf:"bytes,3,opt,name=step" json:"step,omitempty"`
	RoundState []byte `protobuf:"bytes,4,opt,name=roundState,proto3" json:"roundState,omitempty"`
}

func (m *EventDataRoundState) Reset()                    { *m = EventDataRoundState{} }
func (m *EventDataRoundState) String() string            { return proto.CompactTextString(m) }
func (*EventDataRoundState) ProtoMessage()               {}
func (*EventDataRoundState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MsgInfo struct {
	// Types that are valid to be assigned to Msg:
	//	*MsgInfo_RoundStepMsg
	Msg    isMsgInfo_Msg `protobuf_oneof:"Msg"`
	PeerID *p2p.ID       `protobuf:"bytes,2,opt,name=peerID" json:"peerID,omitempty"`
}

func (m *MsgInfo) Reset()                    { *m = MsgInfo{} }
func (m *MsgInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgInfo) ProtoMessage()               {}
func (*MsgInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isMsgInfo_Msg interface {
	isMsgInfo_Msg()
}

type MsgInfo_RoundStepMsg struct {
	RoundStepMsg *consensus.NewRoundStepMessage `protobuf:"bytes,1,opt,name=roundStepMsg,oneof"`
}

func (*MsgInfo_RoundStepMsg) isMsgInfo_Msg() {}

func (m *MsgInfo) GetMsg() isMsgInfo_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *MsgInfo) GetRoundStepMsg() *consensus.NewRoundStepMessage {
	if x, ok := m.GetMsg().(*MsgInfo_RoundStepMsg); ok {
		return x.RoundStepMsg
	}
	return nil
}

func (m *MsgInfo) GetPeerID() *p2p.ID {
	if m != nil {
		return m.PeerID
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MsgInfo) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MsgInfo_OneofMarshaler, _MsgInfo_OneofUnmarshaler, _MsgInfo_OneofSizer, []interface{}{
		(*MsgInfo_RoundStepMsg)(nil),
	}
}

func _MsgInfo_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MsgInfo)
	// Msg
	switch x := m.Msg.(type) {
	case *MsgInfo_RoundStepMsg:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RoundStepMsg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MsgInfo.Msg has unexpected type %T", x)
	}
	return nil
}

func _MsgInfo_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MsgInfo)
	switch tag {
	case 1: // Msg.roundStepMsg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(consensus.NewRoundStepMessage)
		err := b.DecodeMessage(msg)
		m.Msg = &MsgInfo_RoundStepMsg{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MsgInfo_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MsgInfo)
	// Msg
	switch x := m.Msg.(type) {
	case *MsgInfo_RoundStepMsg:
		s := proto.Size(x.RoundStepMsg)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TimeoutInfo struct {
	Duration uint64                  `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	Height   uint64                  `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Round    uint32                  `protobuf:"varint,3,opt,name=round" json:"round,omitempty"`
	Step     consensus.RoundStepType `protobuf:"varint,4,opt,name=step,enum=consensus.RoundStepType" json:"step,omitempty"`
}

func (m *TimeoutInfo) Reset()                    { *m = TimeoutInfo{} }
func (m *TimeoutInfo) String() string            { return proto.CompactTextString(m) }
func (*TimeoutInfo) ProtoMessage()               {}
func (*TimeoutInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type EndHeightMessage struct {
	Height uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
}

func (m *EndHeightMessage) Reset()                    { *m = EndHeightMessage{} }
func (m *EndHeightMessage) String() string            { return proto.CompactTextString(m) }
func (*EndHeightMessage) ProtoMessage()               {}
func (*EndHeightMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*EventDataRoundState)(nil), "wal.EventDataRoundState")
	proto.RegisterType((*MsgInfo)(nil), "wal.MsgInfo")
	proto.RegisterType((*TimeoutInfo)(nil), "wal.TimeoutInfo")
	proto.RegisterType((*EndHeightMessage)(nil), "wal.EndHeightMessage")
}

func init() { proto.RegisterFile("wal/wal.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x52, 0x4d, 0x6f, 0xa3, 0x30,
	0x14, 0x5c, 0x42, 0x3e, 0x76, 0x5f, 0x92, 0xd5, 0xca, 0x5b, 0x55, 0x34, 0x87, 0x14, 0x71, 0xa8,
	0x50, 0xd5, 0x80, 0x44, 0x4f, 0xbd, 0x46, 0x44, 0x4a, 0x0e, 0xe9, 0xc1, 0x8d, 0x54, 0xa9, 0x37,
	0x87, 0xb8, 0x80, 0x4a, 0x6c, 0x0b, 0x9b, 0xa2, 0xfe, 0x80, 0xfe, 0xef, 0x0a, 0x43, 0x29, 0x91,
	0xda, 0xdb, 0x8c, 0x3d, 0xbc, 0x37, 0x33, 0x18, 0xa6, 0x25, 0xc9, 0xfc, 0x92, 0x64, 0x9e, 0xc8,
	0xb9, 0xe2, 0xc8, 0x2c, 0x49, 0x36, 0xbb, 0x88, 0x38, 0x93, 0x94, 0xc9, 0x42, 0xfa, 0x2d, 0xaa,
	0xef, 0x67, 0x53, 0x11, 0x08, 0x5f, 0x04, 0xa2, 0xa6, 0x4e, 0x09, 0xff, 0x57, 0xaf, 0x94, 0xa9,
	0x90, 0x28, 0x82, 0x79, 0xc1, 0x0e, 0x0f, 0x8a, 0x28, 0x8a, 0xce, 0x61, 0x98, 0xd0, 0x34, 0x4e,
	0x94, 0x65, 0xd8, 0x86, 0xdb, 0xc7, 0x0d, 0x43, 0x67, 0x30, 0xc8, 0x2b, 0x95, 0xd5, 0xb3, 0x0d,
	0x77, 0x8a, 0x6b, 0x82, 0x10, 0xf4, 0xa5, 0xa2, 0xc2, 0x32, 0x6d, 0xc3, 0xfd, 0x83, 0x35, 0x46,
	0x73, 0x80, 0xbc, 0x9d, 0x67, 0xf5, 0x6d, 0xc3, 0x9d, 0xe0, 0xce, 0x89, 0x53, 0xc2, 0x68, 0x2b,
	0xe3, 0x0d, 0x7b, 0xe6, 0x28, 0x84, 0x49, 0x73, 0x41, 0xc5, 0x56, 0xc6, 0x7a, 0xe5, 0x38, 0x98,
	0x7b, 0x5f, 0xd6, 0xef, 0x69, 0x89, 0x5b, 0x05, 0x95, 0x92, 0xc4, 0x74, 0xfd, 0x0b, 0x9f, 0x7c,
	0x85, 0x2e, 0x61, 0x28, 0x28, 0xcd, 0x37, 0xa1, 0xf6, 0x36, 0x0e, 0x46, 0x5e, 0x95, 0x72, 0x13,
	0xe2, 0xe6, 0x78, 0x39, 0x00, 0x73, 0x2b, 0x63, 0xe7, 0xdd, 0x80, 0xf1, 0x2e, 0x3d, 0x52, 0x5e,
	0x28, 0xbd, 0x7d, 0x06, 0xbf, 0x0f, 0x45, 0x4e, 0x54, 0xca, 0x59, 0x13, 0xb6, 0xe5, 0x9d, 0x1a,
	0x7a, 0xdf, 0xd7, 0x60, 0x76, 0x6b, 0xb8, 0x69, 0x6a, 0xa8, 0xc2, 0xfe, 0x0d, 0xac, 0x8e, 0xff,
	0xd6, 0xfc, 0xee, 0x4d, 0xd0, 0xba, 0x20, 0xe7, 0x1a, 0xfe, 0xad, 0xd8, 0x61, 0xad, 0x07, 0x36,
	0x99, 0x7e, 0xaa, 0x7d, 0xf9, 0x08, 0x57, 0x3c, 0x8f, 0xbd, 0x3b, 0x95, 0x44, 0x09, 0x49, 0x99,
	0xb7, 0xcf, 0x78, 0xf4, 0xa2, 0xe1, 0xa2, 0xfd, 0x95, 0xd2, 0x2b, 0x49, 0xf6, 0xb4, 0x88, 0x53,
	0x95, 0x14, 0x7b, 0x2f, 0xe2, 0x47, 0xff, 0x53, 0xee, 0x9f, 0xca, 0xfd, 0x5a, 0x5e, 0xbd, 0x99,
	0xfd, 0x50, 0xe3, 0xdb, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x20, 0xd4, 0xd7, 0x45, 0x02,
	0x00, 0x00,
}
