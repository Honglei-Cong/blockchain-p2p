// Code generated by protoc-gen-go.
// source: crypto/crypto.proto
// DO NOT EDIT!

/*
Package crypto is a generated protocol buffer package.

It is generated from these files:
	crypto/crypto.proto

It has these top-level messages:
	PubKeyEd25519
	PubKeySecp256K1
	PrivKeyEd25519
	PrivKeySecp256K1
	SignatureEd25519
	SignatureSecp256K1
*/
package crypto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PubKeyEd25519 struct {
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *PubKeyEd25519) Reset()                    { *m = PubKeyEd25519{} }
func (m *PubKeyEd25519) String() string            { return proto.CompactTextString(m) }
func (*PubKeyEd25519) ProtoMessage()               {}
func (*PubKeyEd25519) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PubKeySecp256K1 struct {
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *PubKeySecp256K1) Reset()                    { *m = PubKeySecp256K1{} }
func (m *PubKeySecp256K1) String() string            { return proto.CompactTextString(m) }
func (*PubKeySecp256K1) ProtoMessage()               {}
func (*PubKeySecp256K1) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PrivKeyEd25519 struct {
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *PrivKeyEd25519) Reset()                    { *m = PrivKeyEd25519{} }
func (m *PrivKeyEd25519) String() string            { return proto.CompactTextString(m) }
func (*PrivKeyEd25519) ProtoMessage()               {}
func (*PrivKeyEd25519) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PrivKeySecp256K1 struct {
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *PrivKeySecp256K1) Reset()                    { *m = PrivKeySecp256K1{} }
func (m *PrivKeySecp256K1) String() string            { return proto.CompactTextString(m) }
func (*PrivKeySecp256K1) ProtoMessage()               {}
func (*PrivKeySecp256K1) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type SignatureEd25519 struct {
	Sig []byte `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (m *SignatureEd25519) Reset()                    { *m = SignatureEd25519{} }
func (m *SignatureEd25519) String() string            { return proto.CompactTextString(m) }
func (*SignatureEd25519) ProtoMessage()               {}
func (*SignatureEd25519) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type SignatureSecp256K1 struct {
	Sig []byte `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (m *SignatureSecp256K1) Reset()                    { *m = SignatureSecp256K1{} }
func (m *SignatureSecp256K1) String() string            { return proto.CompactTextString(m) }
func (*SignatureSecp256K1) ProtoMessage()               {}
func (*SignatureSecp256K1) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*PubKeyEd25519)(nil), "crypto.PubKeyEd25519")
	proto.RegisterType((*PubKeySecp256K1)(nil), "crypto.PubKeySecp256k1")
	proto.RegisterType((*PrivKeyEd25519)(nil), "crypto.PrivKeyEd25519")
	proto.RegisterType((*PrivKeySecp256K1)(nil), "crypto.PrivKeySecp256k1")
	proto.RegisterType((*SignatureEd25519)(nil), "crypto.SignatureEd25519")
	proto.RegisterType((*SignatureSecp256K1)(nil), "crypto.SignatureSecp256k1")
}

func init() { proto.RegisterFile("crypto/crypto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2e, 0xaa, 0x2c,
	0x28, 0xc9, 0xd7, 0x87, 0x50, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0x9e, 0x92,
	0x22, 0x17, 0x6f, 0x40, 0x69, 0x92, 0x77, 0x6a, 0xa5, 0x6b, 0x8a, 0x91, 0xa9, 0xa9, 0xa1, 0xa5,
	0x90, 0x00, 0x17, 0x73, 0x76, 0x6a, 0xa5, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0x88, 0xa9,
	0xa4, 0xcc, 0xc5, 0x0f, 0x51, 0x12, 0x9c, 0x9a, 0x5c, 0x60, 0x64, 0x6a, 0x96, 0x6d, 0x88, 0x45,
	0x91, 0x12, 0x17, 0x5f, 0x40, 0x51, 0x66, 0x19, 0x5e, 0x83, 0x54, 0xb8, 0x04, 0xa0, 0x6a, 0xf0,
	0x99, 0xa4, 0xc2, 0x25, 0x10, 0x9c, 0x99, 0x9e, 0x97, 0x58, 0x52, 0x5a, 0x94, 0x8a, 0x64, 0x56,
	0x71, 0x66, 0x3a, 0x4c, 0x55, 0x71, 0x66, 0xba, 0x92, 0x1a, 0x97, 0x10, 0x5c, 0x15, 0x8a, 0x69,
	0xa8, 0xea, 0x9c, 0x62, 0xb9, 0x34, 0xf3, 0x8b, 0xd2, 0xf5, 0x2c, 0x4b, 0x32, 0x92, 0x33, 0x12,
	0x33, 0xf3, 0xf4, 0x92, 0x72, 0xf2, 0x93, 0xb3, 0xc1, 0x4c, 0xdd, 0x02, 0xa3, 0x02, 0x48, 0x60,
	0x14, 0xeb, 0x41, 0x02, 0x23, 0xca, 0x20, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f,
	0x57, 0x1f, 0xa6, 0x43, 0x1f, 0x55, 0x87, 0x3e, 0x44, 0x07, 0x34, 0x30, 0x93, 0xd8, 0xc0, 0x5c,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x46, 0x2a, 0x09, 0x64, 0x01, 0x00, 0x00,
}
